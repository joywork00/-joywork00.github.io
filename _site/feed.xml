<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AAEON guild</title>
    <description>Jekflix is a template for Jekyll inspired by Netflix and made by Thiago Rossener.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 19 Feb 2020 12:42:26 +0800</pubDate>
    <lastBuildDate>Wed, 19 Feb 2020 12:42:26 +0800</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>AAEON Software Support Portal</title>
        <description>&lt;!-- - **Type:** `Function` --&gt;

&lt;!-- &lt;div class=&quot;Alert Alert--nuxt-green&quot;&gt;

&lt;b&gt;Info:&lt;/b&gt; Please visit the [async data guide](/guide/async-data) as well!

&lt;/div&gt; --&gt;

&lt;div class=&quot;Alert Alert--nuxt-green&quot;&gt;


&lt;div class=&quot;Alert Alert--nuxt-green&quot;&gt;



&lt;div class=&quot;Alert Alert--nuxt-green&quot;&gt;



&lt;!-- The result from asyncData will be **merged** with data.

```js
export default {
  data () {
    return { project: 'default' }
  },
  asyncData (context) {
    return { project: 'nuxt' }
  }
}
``` --&gt;
&lt;!-- 
&lt;div class=&quot;Alert Alert--orange&quot;&gt;

&lt;b&gt;Warning:&lt;/b&gt; You **don't** have access to the component instance through `this` inside `asyncData` because it is called **before initiating** the component.

&lt;/div&gt; --&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 13 May 2019 03:17:18 +0800</pubDate>
        <link>http://localhost:4000/index/</link>
        <guid isPermaLink="true">http://localhost:4000/index/</guid>
        
        <category>aaeon</category>
      </item>
    
      <item>
        <title>BSP OS porting</title>
        <description>&lt;style&gt;
.fancytable{border:1px solid #cccccc; width:100%; border-collapse:collapse;}
.fancytable td{ border:1px solid #cccccc; color:#555555; text-align:center; line-height:28px;}
.headerrow{background-color:#0066cc;height:30px;}
.datarowodd{background-color:#ffffff;}
.dataroweven{background-color:#efefef;}
.datarowodd td{background-color:#ffffff;}
.headerrow td{ color:#ffffff; text-align:center;}
.dataroweven td{ background-color:#efefef;}
&lt;/style&gt;

</description>
        <pubDate>Wed, 10 Oct 2018 20:26:40 +0800</pubDate>
        <link>http://localhost:4000/bsp/</link>
        <guid isPermaLink="true">http://localhost:4000/bsp/</guid>
        
        <category></category>
      </item>
    
      <item>
        <title>Internet Of Things</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt; &lt;div style=&quot;display: table;width:1000px;margin:0 auto; border:#FFFFFF 1px solid;&quot; class=&quot;text001&quot;&gt; &lt;br /&gt; AAEON continues to innovate in providing end-to-end solutions for industrial computing and network applications with our High Efficiency, Reliable and Optimal (HERO) software solutions.&lt;br /&gt; HERO software solutions leverage our expertise and experience with our containerized web app, the HERO Device Management Center (HERO DMC), and native edge device software, the HERO Agent, HERO SDK, and HERO Gateway.&lt;br /&gt; Available pre-loaded on a selection of AAEON platforms, this software infrastructure allows users to monitor several devices and sensors from anywhere thanks to cloud-based technology and edge computing &lt;/div&gt;...</description>
        <pubDate>Tue, 09 Oct 2018 20:26:40 +0800</pubDate>
        <link>http://localhost:4000/iot/</link>
        <guid isPermaLink="true">http://localhost:4000/iot/</guid>
        
        <category></category>
      </item>
    
      <item>
        <title>AI</title>
        <description>&lt;!-- - **Type:** `Function` --&gt;

&lt;!-- &lt;div class=&quot;Alert Alert--nuxt-green&quot;&gt;

&lt;b&gt;Info:&lt;/b&gt; Please visit the [async data guide](/guide/async-data) as well!

&lt;/div&gt; --&gt;

&lt;div class=&quot;Alert Alert--nuxt-green&quot;&gt;


&lt;div class=&quot;Alert Alert--nuxt-green&quot;&gt;



&lt;div class=&quot;Alert Alert--nuxt-green&quot;&gt;




&lt;!-- The result from asyncData will be **merged** with data.

```js
export default {
  data () {
    return { project: 'default' }
  },
  asyncData (context) {
    return { project: 'nuxt' }
  }
}
``` --&gt;
&lt;!-- 
&lt;div class=&quot;Alert Alert--orange&quot;&gt;

&lt;b&gt;Warning:&lt;/b&gt; You **don't** have access to the component instance through `this` inside `asyncData` because it is called **before initiating** the component.

&lt;/div&gt; --&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 08 Oct 2018 20:26:40 +0800</pubDate>
        <link>http://localhost:4000/AI/</link>
        <guid isPermaLink="true">http://localhost:4000/AI/</guid>
        
        <category></category>
      </item>
    
      <item>
        <title>Document &amp; Tools</title>
        <description>&lt;head&gt;
&lt;style&gt;
.fancytable{border:1px solid #cccccc; width:100%; border-collapse:collapse;}
.fancytable td{ border:1px solid #cccccc; color:#555555; text-align:center; line-height:28px;}
.headerrow{background-color:#0066cc;height:30px;}
.datarowodd{background-color:#ffffff;}
.dataroweven{background-color:#efefef;}
.datarowodd td{background-color:#ffffff;}
.headerrow td{ color:#ffffff; text-align:center;}
.dataroweven td{ background-color:#efefef;}
&lt;/style&gt;



&lt;/head&gt;
</description>
        <pubDate>Tue, 12 Oct 2010 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/doc/</link>
        <guid isPermaLink="true">http://localhost:4000/doc/</guid>
        
        <category></category>
      </item>
    
  </channel>
</rss>
